{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Vamsi\\\\Working-frontend\\\\src\\\\pages\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { farmersAPI, employeesAPI, dashboardAPI } from '../api/apiService';\nimport '../styles/Dashboard.css';\nimport FarmerForm from '../components/FarmerForm';\nimport EmployeeForm from '../components/EmployeeForm';\nimport AssignmentModal from '../components/AssignmentModal';\nimport KYCDocumentUpload from '../components/KYCDocumentUpload';\nimport ViewFarmerRegistrationDetails from '../components/ViewFarmerRegistrationDetails';\nimport ViewEditEmployeeDetails from '../components/ViewEditEmployeeDetails';\nimport StatsCard from '../components/StatsCard';\nimport DataTable from '../components/DataTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [currentView, setCurrentView] = useState('farmers');\n  const [farmers, setFarmers] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState('');\n  const [showAssignmentModal, setShowAssignmentModal] = useState(false);\n  const [showFarmerForm, setShowFarmerForm] = useState(false);\n  const [showEmployeeForm, setShowEmployeeForm] = useState(false);\n  const [showFarmerDetails, setShowFarmerDetails] = useState(false);\n  const [selectedFarmerData, setSelectedFarmerData] = useState(null);\n  const [showEmployeeDetails, setShowEmployeeDetails] = useState(false);\n  const [selectedEmployeeData, setSelectedEmployeeData] = useState(null);\n  const [showKYCDocumentUpload, setShowKYCDocumentUpload] = useState(false);\n  const [selectedFarmerForKYC, setSelectedFarmerForKYC] = useState(null);\n  const [filters, setFilters] = useState({\n    state: '',\n    district: '',\n    region: '',\n    kycStatus: '',\n    assignmentStatus: '',\n    registrationStatus: '',\n    registrationRole: ''\n  });\n\n  // State for dashboard data\n  const [dashboardStats, setDashboardStats] = useState({\n    totalFarmers: 0,\n    totalEmployees: 0,\n    unassignedFarmers: 0,\n    approvedKyc: 0,\n    pendingKyc: 0,\n    kycCompletionRate: 0\n  });\n  const [locations, setLocations] = useState({\n    states: [],\n    districts: []\n  });\n  const [todoList, setTodoList] = useState({\n    unassignedFarmers: [],\n    employeesWithPendingTasks: [],\n    totalUnassigned: 0,\n    totalPendingTasks: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load data from API\n  useEffect(() => {\n    const loadDashboardData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Load dashboard statistics\n        const statsData = await dashboardAPI.getAdminDashboardStats();\n        setDashboardStats(statsData);\n\n        // Load farmers with KYC status\n        const farmersData = await dashboardAPI.getFarmersWithKyc();\n        setFarmers(farmersData);\n\n        // Load employees with statistics\n        const employeesData = await dashboardAPI.getEmployeesWithStats();\n        setEmployees(employeesData);\n\n        // Load locations for filters\n        const locationsData = await dashboardAPI.getLocations();\n        setLocations(locationsData);\n\n        // Load todo list\n        const todoData = await dashboardAPI.getAdminTodoList();\n        setTodoList(todoData);\n      } catch (error) {\n        console.error('Error loading dashboard data:', error);\n        setError('Failed to load dashboard data. Please try again.');\n\n        // Fallback to mock data if API fails\n        const mockFarmers = [{\n          id: 1,\n          name: 'Rajesh Kumar',\n          contactNumber: '9876543210',\n          state: 'Maharashtra',\n          district: 'Pune',\n          kycStatus: 'APPROVED',\n          assignedEmployee: 'John Doe',\n          assignedEmployeeId: 1\n        }];\n        const mockEmployees = [{\n          id: 1,\n          name: 'John Doe',\n          email: 'john@agri.com',\n          contactNumber: '9876543200',\n          state: 'Maharashtra',\n          district: 'Pune',\n          totalAssigned: 25,\n          approvedKyc: 15,\n          pendingKyc: 8\n        }];\n        setFarmers(mockFarmers);\n        setEmployees(mockEmployees);\n        setDashboardStats({\n          totalFarmers: 1250,\n          totalEmployees: 25,\n          unassignedFarmers: 45,\n          approvedKyc: 1150,\n          pendingKyc: 78,\n          kycCompletionRate: 92.0\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadDashboardData();\n  }, []);\n  const getFilteredFarmers = () => {\n    return farmers.filter(farmer => {\n      const matchesState = !filters.state || farmer.state === filters.state;\n      const matchesDistrict = !filters.district || farmer.district === filters.district;\n      const matchesKycStatus = !filters.kycStatus || farmer.kycStatus === filters.kycStatus;\n      const matchesAssignmentStatus = !filters.assignmentStatus || (filters.assignmentStatus === 'ASSIGNED' ? farmer.assignedEmployee : !farmer.assignedEmployee);\n      return matchesState && matchesDistrict && matchesKycStatus && matchesAssignmentStatus;\n    });\n  };\n  const getFilteredEmployees = () => {\n    if (!selectedEmployee) return employees;\n    return employees.filter(emp => emp.id === parseInt(selectedEmployee));\n  };\n  const getStats = () => {\n    const totalFarmers = farmers.length;\n    const unassignedFarmers = farmers.filter(f => f.assignmentStatus === 'UNASSIGNED').length;\n    const pendingKyc = farmers.filter(f => f.kycStatus === 'PENDING').length;\n    const overdueKyc = farmers.filter(f => {\n      if (f.assignedDate) {\n        const assignedDate = new Date(f.assignedDate);\n        const daysDiff = (new Date() - assignedDate) / (1000 * 60 * 60 * 24);\n        return daysDiff > 7 && f.kycStatus === 'PENDING';\n      }\n      return false;\n    }).length;\n    return {\n      totalFarmers,\n      unassignedFarmers,\n      pendingKyc,\n      overdueKyc\n    };\n  };\n  const handleLogout = () => {\n    logout();\n  };\n  const handleViewFarmer = farmer => {\n    // Convert the farmer data to match the registration form structure\n    const farmerData = {\n      firstName: farmer.name.split(' ')[0] || '',\n      lastName: farmer.name.split(' ').slice(1).join(' ') || '',\n      mobileNumber: farmer.phone,\n      state: farmer.state,\n      district: farmer.district,\n      region: farmer.region,\n      kycStatus: farmer.kycStatus,\n      status: farmer.assignmentStatus,\n      assignedEmployee: farmer.assignedEmployee,\n      assignedDate: farmer.assignedDate,\n      // Add mock data for other fields\n      dateOfBirth: '1990-01-01',\n      gender: 'Male',\n      email: 'farmer@example.com',\n      maritalStatus: 'Married',\n      religion: 'Hindu',\n      caste: 'General',\n      category: 'General',\n      education: 'High School',\n      village: 'Sample Village',\n      postOffice: 'Sample Post Office',\n      policeStation: 'Sample Police Station',\n      pincode: '123456',\n      occupation: 'Farmer',\n      annualIncome: '50000',\n      landOwnership: 'Owned',\n      landArea: '5',\n      irrigationType: 'Tube Well',\n      soilType: 'Alluvial',\n      primaryCrop: 'Wheat',\n      secondaryCrop: 'Rice',\n      cropSeason: 'Rabi',\n      farmingExperience: '10',\n      bankName: 'State Bank of India',\n      branchName: 'Main Branch',\n      accountNumber: '1234567890',\n      ifscCode: 'SBIN0001234',\n      accountType: 'Savings',\n      aadhaarNumber: '123456789012',\n      panNumber: 'ABCDE1234F',\n      voterId: 'ABC1234567',\n      rationCardNumber: '123456789',\n      registrationDate: farmer.assignedDate || new Date().toISOString(),\n      photo: null\n    };\n    setSelectedFarmerData(farmerData);\n    setShowFarmerDetails(true);\n  };\n  const handleCloseFarmerDetails = () => {\n    setShowFarmerDetails(false);\n    setSelectedFarmerData(null);\n  };\n  const handleViewEmployee = employee => {\n    setSelectedEmployeeData(employee);\n    setShowEmployeeDetails(true);\n  };\n  const handleCloseEmployeeDetails = () => {\n    setShowEmployeeDetails(false);\n    setSelectedEmployeeData(null);\n  };\n  const handleUpdateEmployee = updatedData => {\n    setEmployees(prev => prev.map(emp => emp.id === selectedEmployeeData.id ? {\n      ...emp,\n      ...updatedData\n    } : emp));\n    setShowEmployeeDetails(false);\n    setSelectedEmployeeData(null);\n  };\n  const handleKYCDocumentUpload = farmer => {\n    setSelectedFarmerForKYC(farmer);\n    setShowKYCDocumentUpload(true);\n  };\n  const handleCloseKYCDocumentUpload = () => {\n    setShowKYCDocumentUpload(false);\n    setSelectedFarmerForKYC(null);\n  };\n  const handleKYCApprove = (farmerId, documents) => {\n    setFarmers(prev => prev.map(farmer => farmer.id === farmerId ? {\n      ...farmer,\n      kycStatus: 'APPROVED'\n    } : farmer));\n    setShowKYCDocumentUpload(false);\n    setSelectedFarmerForKYC(null);\n  };\n  const handleKYCReject = (farmerId, reason, documents) => {\n    setFarmers(prev => prev.map(farmer => farmer.id === farmerId ? {\n      ...farmer,\n      kycStatus: 'REJECTED'\n    } : farmer));\n    setShowKYCDocumentUpload(false);\n    setSelectedFarmerForKYC(null);\n  };\n  const handleKYCReferBack = (farmerId, reason, documents) => {\n    setFarmers(prev => prev.map(farmer => farmer.id === farmerId ? {\n      ...farmer,\n      kycStatus: 'REFER_BACK'\n    } : farmer));\n    setShowKYCDocumentUpload(false);\n    setSelectedFarmerForKYC(null);\n  };\n  const renderOverview = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-grid\",\n      children: [/*#__PURE__*/_jsxDEV(StatsCard, {\n        title: \"Total Farmers\",\n        value: getStats().totalFarmers,\n        icon: \"\\uD83D\\uDC68\\u200D\\uD83C\\uDF3E\",\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatsCard, {\n        title: \"Unassigned Farmers\",\n        value: getStats().unassignedFarmers,\n        icon: \"\\uD83D\\uDCCB\",\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatsCard, {\n        title: \"Pending KYC\",\n        value: getStats().pendingKyc,\n        icon: \"\\u23F3\",\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatsCard, {\n        title: \"Overdue KYC\",\n        value: getStats().overdueKyc,\n        icon: \"\\u26A0\\uFE0F\",\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quick Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn primary\",\n          onClick: () => setShowFarmerForm(true),\n          children: \"\\u2795 Add Farmer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn primary\",\n          onClick: () => setShowEmployeeForm(true),\n          children: \"\\u2795 Add Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn secondary\",\n          onClick: () => setShowAssignmentModal(true),\n          children: \"\\uD83D\\uDD17 Assign Farmers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-items\",\n        children: [getStats().unassignedFarmers > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"todo-icon\",\n            children: \"\\uD83D\\uDCCB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [getStats().unassignedFarmers, \" farmers need assignment\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), getStats().overdueKyc > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"todo-icon\",\n            children: \"\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [getStats().overdueKyc, \" KYC cases overdue\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), employees.filter(emp => emp.kycSummary.pending > 10).map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"todo-icon\",\n            children: \"\\uD83D\\uDCCA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [emp.name, \" has \", emp.kycSummary.pending, \" pending cases\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)]\n        }, emp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n  const renderFarmers = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Farmer Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.state,\n          onChange: e => setFilters(prev => ({\n            ...prev,\n            state: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All States\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Maharashtra\",\n            children: \"Maharashtra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Gujarat\",\n            children: \"Gujarat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Punjab\",\n            children: \"Punjab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.kycStatus,\n          onChange: e => setFilters(prev => ({\n            ...prev,\n            kycStatus: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All KYC Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"APPROVED\",\n            children: \"Approved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PENDING\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"REFER_BACK\",\n            children: \"Refer Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"REJECTED\",\n            children: \"Rejected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.assignmentStatus,\n          onChange: e => setFilters(prev => ({\n            ...prev,\n            assignmentStatus: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Assignment Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ASSIGNED\",\n            children: \"Assigned\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"UNASSIGNED\",\n            children: \"Unassigned\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      data: getFilteredFarmers(),\n      columns: [{\n        key: 'name',\n        label: 'Name'\n      }, {\n        key: 'phone',\n        label: 'Phone'\n      }, {\n        key: 'state',\n        label: 'State'\n      }, {\n        key: 'district',\n        label: 'District'\n      }, {\n        key: 'kycStatus',\n        label: 'KYC Status'\n      }, {\n        key: 'assignmentStatus',\n        label: 'Assignment Status'\n      }, {\n        key: 'assignedEmployee',\n        label: 'Assigned Employee'\n      }],\n      onView: handleViewFarmer,\n      onEdit: farmer => {\n        // Handle edit farmer - open the farmer form in edit mode\n        console.log('Edit farmer:', farmer);\n        // For now, just show the form. In a real app, you'd pass the farmer data\n        setShowFarmerForm(true);\n        // TODO: Pass farmer data to form for editing\n      },\n      customActions: [{\n        icon: '📁',\n        label: 'KYC Docs',\n        className: 'secondary',\n        onClick: handleKYCDocumentUpload\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n  const renderEmployees = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employee Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedEmployee,\n          onChange: e => setSelectedEmployee(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), employees.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: emp.id,\n            children: emp.name\n          }, emp.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      data: getFilteredEmployees(),\n      columns: [{\n        key: 'name',\n        label: 'Name'\n      }, {\n        key: 'email',\n        label: 'Email'\n      }, {\n        key: 'phone',\n        label: 'Phone'\n      }, {\n        key: 'department',\n        label: 'Department'\n      }, {\n        key: 'designation',\n        label: 'Designation'\n      }, {\n        key: 'status',\n        label: 'Status'\n      }],\n      onView: handleViewEmployee,\n      onEdit: employee => {\n        setShowEmployeeForm(true);\n        console.log('Edit employee:', employee);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome back, \", user === null || user === void 0 ? void 0 : user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-btn ${currentView === 'overview' ? 'active' : ''}`,\n        onClick: () => setCurrentView('overview'),\n        children: \"\\uD83D\\uDCCA Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-btn ${currentView === 'farmers' ? 'active' : ''}`,\n        onClick: () => setCurrentView('farmers'),\n        children: \"\\uD83D\\uDC68\\u200D\\uD83C\\uDF3E Farmers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-btn ${currentView === 'employees' ? 'active' : ''}`,\n        onClick: () => setCurrentView('employees'),\n        children: \"\\uD83D\\uDC65 Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-main\",\n      children: [currentView === 'overview' && renderOverview(), currentView === 'farmers' && renderFarmers(), currentView === 'employees' && renderEmployees()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this), showFarmerForm && /*#__PURE__*/_jsxDEV(FarmerForm, {\n      onClose: () => setShowFarmerForm(false),\n      onSubmit: farmerData => {\n        setFarmers(prev => [...prev, {\n          ...farmerData,\n          id: Date.now()\n        }]);\n        setShowFarmerForm(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 9\n    }, this), showEmployeeForm && /*#__PURE__*/_jsxDEV(EmployeeForm, {\n      onClose: () => setShowEmployeeForm(false),\n      onSubmit: employeeData => {\n        setEmployees(prev => [...prev, {\n          ...employeeData,\n          id: Date.now()\n        }]);\n        setShowEmployeeForm(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }, this), showAssignmentModal && /*#__PURE__*/_jsxDEV(AssignmentModal, {\n      farmers: farmers.filter(f => f.assignmentStatus === 'UNASSIGNED'),\n      employees: employees,\n      onClose: () => setShowAssignmentModal(false),\n      onAssign: assignments => {\n        setFarmers(prev => prev.map(farmer => {\n          const assignment = assignments.find(a => a.farmerId === farmer.id);\n          if (assignment) {\n            return {\n              ...farmer,\n              assignmentStatus: 'ASSIGNED',\n              assignedEmployee: assignment.employeeName,\n              assignedDate: new Date().toISOString().split('T')[0]\n            };\n          }\n          return farmer;\n        }));\n        setShowAssignmentModal(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 9\n    }, this), showFarmerDetails && /*#__PURE__*/_jsxDEV(ViewFarmerRegistrationDetails, {\n      farmerData: selectedFarmerData,\n      onClose: handleCloseFarmerDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 20\n    }, this), showEmployeeDetails && /*#__PURE__*/_jsxDEV(ViewEditEmployeeDetails, {\n      employeeData: selectedEmployeeData,\n      onClose: handleCloseEmployeeDetails,\n      onUpdate: handleUpdateEmployee\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 20\n    }, this), showKYCDocumentUpload && /*#__PURE__*/_jsxDEV(KYCDocumentUpload, {\n      isOpen: showKYCDocumentUpload,\n      onClose: handleCloseKYCDocumentUpload,\n      farmer: selectedFarmerForKYC,\n      onApprove: handleKYCApprove,\n      onReject: handleKYCReject,\n      onReferBack: handleKYCReferBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 481,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"qqsFOdNk++keA7JmYHL4FNFhKkE=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","farmersAPI","employeesAPI","dashboardAPI","FarmerForm","EmployeeForm","AssignmentModal","KYCDocumentUpload","ViewFarmerRegistrationDetails","ViewEditEmployeeDetails","StatsCard","DataTable","jsxDEV","_jsxDEV","AdminDashboard","_s","user","logout","currentView","setCurrentView","farmers","setFarmers","employees","setEmployees","selectedEmployee","setSelectedEmployee","showAssignmentModal","setShowAssignmentModal","showFarmerForm","setShowFarmerForm","showEmployeeForm","setShowEmployeeForm","showFarmerDetails","setShowFarmerDetails","selectedFarmerData","setSelectedFarmerData","showEmployeeDetails","setShowEmployeeDetails","selectedEmployeeData","setSelectedEmployeeData","showKYCDocumentUpload","setShowKYCDocumentUpload","selectedFarmerForKYC","setSelectedFarmerForKYC","filters","setFilters","state","district","region","kycStatus","assignmentStatus","registrationStatus","registrationRole","dashboardStats","setDashboardStats","totalFarmers","totalEmployees","unassignedFarmers","approvedKyc","pendingKyc","kycCompletionRate","locations","setLocations","states","districts","todoList","setTodoList","employeesWithPendingTasks","totalUnassigned","totalPendingTasks","loading","setLoading","error","setError","loadDashboardData","statsData","getAdminDashboardStats","farmersData","getFarmersWithKyc","employeesData","getEmployeesWithStats","locationsData","getLocations","todoData","getAdminTodoList","console","mockFarmers","id","name","contactNumber","assignedEmployee","assignedEmployeeId","mockEmployees","email","totalAssigned","getFilteredFarmers","filter","farmer","matchesState","matchesDistrict","matchesKycStatus","matchesAssignmentStatus","getFilteredEmployees","emp","parseInt","getStats","length","f","overdueKyc","assignedDate","Date","daysDiff","handleLogout","handleViewFarmer","farmerData","firstName","split","lastName","slice","join","mobileNumber","phone","status","dateOfBirth","gender","maritalStatus","religion","caste","category","education","village","postOffice","policeStation","pincode","occupation","annualIncome","landOwnership","landArea","irrigationType","soilType","primaryCrop","secondaryCrop","cropSeason","farmingExperience","bankName","branchName","accountNumber","ifscCode","accountType","aadhaarNumber","panNumber","voterId","rationCardNumber","registrationDate","toISOString","photo","handleCloseFarmerDetails","handleViewEmployee","employee","handleCloseEmployeeDetails","handleUpdateEmployee","updatedData","prev","map","handleKYCDocumentUpload","handleCloseKYCDocumentUpload","handleKYCApprove","farmerId","documents","handleKYCReject","reason","handleKYCReferBack","renderOverview","className","children","title","value","icon","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","kycSummary","pending","renderFarmers","onChange","e","target","data","columns","key","label","onView","onEdit","log","customActions","renderEmployees","onClose","onSubmit","now","employeeData","onAssign","assignments","assignment","find","a","employeeName","onUpdate","isOpen","onApprove","onReject","onReferBack","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Vamsi/Working-frontend/src/pages/AdminDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { farmersAPI, employeesAPI, dashboardAPI } from '../api/apiService';\r\nimport '../styles/Dashboard.css';\r\nimport FarmerForm from '../components/FarmerForm';\r\nimport EmployeeForm from '../components/EmployeeForm';\r\nimport AssignmentModal from '../components/AssignmentModal';\r\nimport KYCDocumentUpload from '../components/KYCDocumentUpload';\r\nimport ViewFarmerRegistrationDetails from '../components/ViewFarmerRegistrationDetails';\r\nimport ViewEditEmployeeDetails from '../components/ViewEditEmployeeDetails';\r\n\r\nimport StatsCard from '../components/StatsCard';\r\nimport DataTable from '../components/DataTable';\r\n\r\nconst AdminDashboard = () => {\r\n  const { user, logout } = useAuth();\r\n  const [currentView, setCurrentView] = useState('farmers');\r\n  const [farmers, setFarmers] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState('');\r\n  const [showAssignmentModal, setShowAssignmentModal] = useState(false);\r\n  const [showFarmerForm, setShowFarmerForm] = useState(false);\r\n  const [showEmployeeForm, setShowEmployeeForm] = useState(false);\r\n  const [showFarmerDetails, setShowFarmerDetails] = useState(false);\r\n  const [selectedFarmerData, setSelectedFarmerData] = useState(null);\r\n  const [showEmployeeDetails, setShowEmployeeDetails] = useState(false);\r\n  const [selectedEmployeeData, setSelectedEmployeeData] = useState(null);\r\n  const [showKYCDocumentUpload, setShowKYCDocumentUpload] = useState(false);\r\n  const [selectedFarmerForKYC, setSelectedFarmerForKYC] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    state: '',\r\n    district: '',\r\n    region: '',\r\n    kycStatus: '',\r\n    assignmentStatus: '',\r\n    registrationStatus: '',\r\n    registrationRole: ''\r\n  });\r\n\r\n  // State for dashboard data\r\n  const [dashboardStats, setDashboardStats] = useState({\r\n    totalFarmers: 0,\r\n    totalEmployees: 0,\r\n    unassignedFarmers: 0,\r\n    approvedKyc: 0,\r\n    pendingKyc: 0,\r\n    kycCompletionRate: 0\r\n  });\r\n  const [locations, setLocations] = useState({ states: [], districts: [] });\r\n  const [todoList, setTodoList] = useState({\r\n    unassignedFarmers: [],\r\n    employeesWithPendingTasks: [],\r\n    totalUnassigned: 0,\r\n    totalPendingTasks: 0\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load data from API\r\n  useEffect(() => {\r\n    const loadDashboardData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        // Load dashboard statistics\r\n        const statsData = await dashboardAPI.getAdminDashboardStats();\r\n        setDashboardStats(statsData);\r\n\r\n        // Load farmers with KYC status\r\n        const farmersData = await dashboardAPI.getFarmersWithKyc();\r\n        setFarmers(farmersData);\r\n\r\n        // Load employees with statistics\r\n        const employeesData = await dashboardAPI.getEmployeesWithStats();\r\n        setEmployees(employeesData);\r\n\r\n        // Load locations for filters\r\n        const locationsData = await dashboardAPI.getLocations();\r\n        setLocations(locationsData);\r\n\r\n        // Load todo list\r\n        const todoData = await dashboardAPI.getAdminTodoList();\r\n        setTodoList(todoData);\r\n\r\n      } catch (error) {\r\n        console.error('Error loading dashboard data:', error);\r\n        setError('Failed to load dashboard data. Please try again.');\r\n        \r\n        // Fallback to mock data if API fails\r\n        const mockFarmers = [\r\n          {\r\n            id: 1,\r\n            name: 'Rajesh Kumar',\r\n            contactNumber: '9876543210',\r\n            state: 'Maharashtra',\r\n            district: 'Pune',\r\n            kycStatus: 'APPROVED',\r\n            assignedEmployee: 'John Doe',\r\n            assignedEmployeeId: 1\r\n          }\r\n        ];\r\n        const mockEmployees = [\r\n          {\r\n            id: 1,\r\n            name: 'John Doe',\r\n            email: 'john@agri.com',\r\n            contactNumber: '9876543200',\r\n            state: 'Maharashtra',\r\n            district: 'Pune',\r\n            totalAssigned: 25,\r\n            approvedKyc: 15,\r\n            pendingKyc: 8\r\n          }\r\n        ];\r\n        \r\n        setFarmers(mockFarmers);\r\n        setEmployees(mockEmployees);\r\n        setDashboardStats({\r\n          totalFarmers: 1250,\r\n          totalEmployees: 25,\r\n          unassignedFarmers: 45,\r\n          approvedKyc: 1150,\r\n          pendingKyc: 78,\r\n          kycCompletionRate: 92.0\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadDashboardData();\r\n  }, []);\r\n\r\n  const getFilteredFarmers = () => {\r\n    return farmers.filter(farmer => {\r\n      const matchesState = !filters.state || farmer.state === filters.state;\r\n      const matchesDistrict = !filters.district || farmer.district === filters.district;\r\n      const matchesKycStatus = !filters.kycStatus || farmer.kycStatus === filters.kycStatus;\r\n      const matchesAssignmentStatus = !filters.assignmentStatus || \r\n        (filters.assignmentStatus === 'ASSIGNED' ? farmer.assignedEmployee : !farmer.assignedEmployee);\r\n      \r\n      return matchesState && matchesDistrict && matchesKycStatus && matchesAssignmentStatus;\r\n    });\r\n  };\r\n\r\n  const getFilteredEmployees = () => {\r\n    if (!selectedEmployee) return employees;\r\n    return employees.filter(emp => emp.id === parseInt(selectedEmployee));\r\n  };\r\n\r\n  const getStats = () => {\r\n    const totalFarmers = farmers.length;\r\n    const unassignedFarmers = farmers.filter(f => f.assignmentStatus === 'UNASSIGNED').length;\r\n    const pendingKyc = farmers.filter(f => f.kycStatus === 'PENDING').length;\r\n    const overdueKyc = farmers.filter(f => {\r\n      if (f.assignedDate) {\r\n        const assignedDate = new Date(f.assignedDate);\r\n        const daysDiff = (new Date() - assignedDate) / (1000 * 60 * 60 * 24);\r\n        return daysDiff > 7 && f.kycStatus === 'PENDING';\r\n      }\r\n      return false;\r\n    }).length;\r\n\r\n    return {\r\n      totalFarmers,\r\n      unassignedFarmers,\r\n      pendingKyc,\r\n      overdueKyc\r\n    };\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n\r\n  const handleViewFarmer = (farmer) => {\r\n    // Convert the farmer data to match the registration form structure\r\n    const farmerData = {\r\n      firstName: farmer.name.split(' ')[0] || '',\r\n      lastName: farmer.name.split(' ').slice(1).join(' ') || '',\r\n      mobileNumber: farmer.phone,\r\n      state: farmer.state,\r\n      district: farmer.district,\r\n      region: farmer.region,\r\n      kycStatus: farmer.kycStatus,\r\n      status: farmer.assignmentStatus,\r\n      assignedEmployee: farmer.assignedEmployee,\r\n      assignedDate: farmer.assignedDate,\r\n      // Add mock data for other fields\r\n      dateOfBirth: '1990-01-01',\r\n      gender: 'Male',\r\n      email: 'farmer@example.com',\r\n      maritalStatus: 'Married',\r\n      religion: 'Hindu',\r\n      caste: 'General',\r\n      category: 'General',\r\n      education: 'High School',\r\n      village: 'Sample Village',\r\n      postOffice: 'Sample Post Office',\r\n      policeStation: 'Sample Police Station',\r\n      pincode: '123456',\r\n      occupation: 'Farmer',\r\n      annualIncome: '50000',\r\n      landOwnership: 'Owned',\r\n      landArea: '5',\r\n      irrigationType: 'Tube Well',\r\n      soilType: 'Alluvial',\r\n      primaryCrop: 'Wheat',\r\n      secondaryCrop: 'Rice',\r\n      cropSeason: 'Rabi',\r\n      farmingExperience: '10',\r\n      bankName: 'State Bank of India',\r\n      branchName: 'Main Branch',\r\n      accountNumber: '1234567890',\r\n      ifscCode: 'SBIN0001234',\r\n      accountType: 'Savings',\r\n      aadhaarNumber: '123456789012',\r\n      panNumber: 'ABCDE1234F',\r\n      voterId: 'ABC1234567',\r\n      rationCardNumber: '123456789',\r\n      registrationDate: farmer.assignedDate || new Date().toISOString(),\r\n      photo: null\r\n    };\r\n    \r\n    setSelectedFarmerData(farmerData);\r\n    setShowFarmerDetails(true);\r\n  };\r\n\r\n  const handleCloseFarmerDetails = () => {\r\n    setShowFarmerDetails(false);\r\n    setSelectedFarmerData(null);\r\n  };\r\n\r\n  const handleViewEmployee = (employee) => {\r\n    setSelectedEmployeeData(employee);\r\n    setShowEmployeeDetails(true);\r\n  };\r\n\r\n  const handleCloseEmployeeDetails = () => {\r\n    setShowEmployeeDetails(false);\r\n    setSelectedEmployeeData(null);\r\n  };\r\n\r\n  const handleUpdateEmployee = (updatedData) => {\r\n    setEmployees(prev => prev.map(emp => \r\n      emp.id === selectedEmployeeData.id ? { ...emp, ...updatedData } : emp\r\n    ));\r\n    setShowEmployeeDetails(false);\r\n    setSelectedEmployeeData(null);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleKYCDocumentUpload = (farmer) => {\r\n    setSelectedFarmerForKYC(farmer);\r\n    setShowKYCDocumentUpload(true);\r\n  };\r\n\r\n  const handleCloseKYCDocumentUpload = () => {\r\n    setShowKYCDocumentUpload(false);\r\n    setSelectedFarmerForKYC(null);\r\n  };\r\n\r\n  const handleKYCApprove = (farmerId, documents) => {\r\n    setFarmers(prev => prev.map(farmer => \r\n      farmer.id === farmerId \r\n        ? { ...farmer, kycStatus: 'APPROVED' }\r\n        : farmer\r\n    ));\r\n    setShowKYCDocumentUpload(false);\r\n    setSelectedFarmerForKYC(null);\r\n  };\r\n\r\n  const handleKYCReject = (farmerId, reason, documents) => {\r\n    setFarmers(prev => prev.map(farmer => \r\n      farmer.id === farmerId \r\n        ? { ...farmer, kycStatus: 'REJECTED' }\r\n        : farmer\r\n    ));\r\n    setShowKYCDocumentUpload(false);\r\n    setSelectedFarmerForKYC(null);\r\n  };\r\n\r\n  const handleKYCReferBack = (farmerId, reason, documents) => {\r\n    setFarmers(prev => prev.map(farmer => \r\n      farmer.id === farmerId \r\n        ? { ...farmer, kycStatus: 'REFER_BACK' }\r\n        : farmer\r\n    ));\r\n    setShowKYCDocumentUpload(false);\r\n    setSelectedFarmerForKYC(null);\r\n  };\r\n\r\n  const renderOverview = () => (\r\n    <div className=\"dashboard-content\">\r\n      <div className=\"stats-grid\">\r\n        <StatsCard\r\n          title=\"Total Farmers\"\r\n          value={getStats().totalFarmers}\r\n          icon=\"👨‍🌾\"\r\n          color=\"blue\"\r\n        />\r\n        <StatsCard\r\n          title=\"Unassigned Farmers\"\r\n          value={getStats().unassignedFarmers}\r\n          icon=\"📋\"\r\n          color=\"orange\"\r\n        />\r\n        <StatsCard\r\n          title=\"Pending KYC\"\r\n          value={getStats().pendingKyc}\r\n          icon=\"⏳\"\r\n          color=\"yellow\"\r\n        />\r\n        <StatsCard\r\n          title=\"Overdue KYC\"\r\n          value={getStats().overdueKyc}\r\n          icon=\"⚠️\"\r\n          color=\"red\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"quick-actions\">\r\n        <h3>Quick Actions</h3>\r\n        <div className=\"action-buttons\">\r\n          <button \r\n            className=\"action-btn primary\"\r\n            onClick={() => setShowFarmerForm(true)}\r\n          >\r\n            ➕ Add Farmer\r\n          </button>\r\n          <button \r\n            className=\"action-btn primary\"\r\n            onClick={() => setShowEmployeeForm(true)}\r\n          >\r\n            ➕ Add Employee\r\n          </button>\r\n          <button \r\n            className=\"action-btn secondary\"\r\n            onClick={() => setShowAssignmentModal(true)}\r\n          >\r\n            🔗 Assign Farmers\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"todo-panel\">\r\n        <h3>To-Do List</h3>\r\n        <div className=\"todo-items\">\r\n          {getStats().unassignedFarmers > 0 && (\r\n            <div className=\"todo-item\">\r\n              <span className=\"todo-icon\">📋</span>\r\n              <span>{getStats().unassignedFarmers} farmers need assignment</span>\r\n            </div>\r\n          )}\r\n          {getStats().overdueKyc > 0 && (\r\n            <div className=\"todo-item\">\r\n              <span className=\"todo-icon\">⚠️</span>\r\n              <span>{getStats().overdueKyc} KYC cases overdue</span>\r\n            </div>\r\n          )}\r\n          {employees.filter(emp => emp.kycSummary.pending > 10).map(emp => (\r\n            <div key={emp.id} className=\"todo-item\">\r\n              <span className=\"todo-icon\">📊</span>\r\n              <span>{emp.name} has {emp.kycSummary.pending} pending cases</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderFarmers = () => (\r\n    <div className=\"dashboard-content\">\r\n      <div className=\"filters-section\">\r\n        <h3>Farmer Management</h3>\r\n        <div className=\"filters\">\r\n          <select \r\n            value={filters.state} \r\n            onChange={(e) => setFilters(prev => ({ ...prev, state: e.target.value }))}\r\n          >\r\n            <option value=\"\">All States</option>\r\n            <option value=\"Maharashtra\">Maharashtra</option>\r\n            <option value=\"Gujarat\">Gujarat</option>\r\n            <option value=\"Punjab\">Punjab</option>\r\n          </select>\r\n          <select \r\n            value={filters.kycStatus} \r\n            onChange={(e) => setFilters(prev => ({ ...prev, kycStatus: e.target.value }))}\r\n          >\r\n            <option value=\"\">All KYC Status</option>\r\n            <option value=\"APPROVED\">Approved</option>\r\n            <option value=\"PENDING\">Pending</option>\r\n            <option value=\"REFER_BACK\">Refer Back</option>\r\n            <option value=\"REJECTED\">Rejected</option>\r\n          </select>\r\n          <select \r\n            value={filters.assignmentStatus} \r\n            onChange={(e) => setFilters(prev => ({ ...prev, assignmentStatus: e.target.value }))}\r\n          >\r\n            <option value=\"\">All Assignment Status</option>\r\n            <option value=\"ASSIGNED\">Assigned</option>\r\n            <option value=\"UNASSIGNED\">Unassigned</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <DataTable\r\n        data={getFilteredFarmers()}\r\n        columns={[\r\n          { key: 'name', label: 'Name' },\r\n          { key: 'phone', label: 'Phone' },\r\n          { key: 'state', label: 'State' },\r\n          { key: 'district', label: 'District' },\r\n          { key: 'kycStatus', label: 'KYC Status' },\r\n          { key: 'assignmentStatus', label: 'Assignment Status' },\r\n          { key: 'assignedEmployee', label: 'Assigned Employee' }\r\n        ]}\r\n        onView={handleViewFarmer}\r\n        onEdit={(farmer) => {\r\n          // Handle edit farmer - open the farmer form in edit mode\r\n          console.log('Edit farmer:', farmer);\r\n          // For now, just show the form. In a real app, you'd pass the farmer data\r\n          setShowFarmerForm(true);\r\n          // TODO: Pass farmer data to form for editing\r\n        }}\r\n        customActions={[\r\n          {\r\n            icon: '📁',\r\n            label: 'KYC Docs',\r\n            className: 'secondary',\r\n            onClick: handleKYCDocumentUpload\r\n          }\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const renderEmployees = () => (\r\n    <div className=\"dashboard-content\">\r\n      <div className=\"filters-section\">\r\n        <h3>Employee Management</h3>\r\n        <div className=\"filters\">\r\n          <select \r\n            value={selectedEmployee} \r\n            onChange={(e) => setSelectedEmployee(e.target.value)}\r\n          >\r\n            <option value=\"\">All Employees</option>\r\n            {employees.map(emp => (\r\n              <option key={emp.id} value={emp.id}>{emp.name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <DataTable\r\n        data={getFilteredEmployees()}\r\n        columns={[\r\n          { key: 'name', label: 'Name' },\r\n          { key: 'email', label: 'Email' },\r\n          { key: 'phone', label: 'Phone' },\r\n          { key: 'department', label: 'Department' },\r\n          { key: 'designation', label: 'Designation' },\r\n          { key: 'status', label: 'Status' }\r\n        ]}\r\n        onView={handleViewEmployee}\r\n        onEdit={(employee) => {\r\n          setShowEmployeeForm(true);\r\n          console.log('Edit employee:', employee);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"header-left\">\r\n          <h1>Admin Dashboard</h1>\r\n          <p>Welcome back, {user?.name}</p>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <button className=\"logout-btn\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"dashboard-nav\">\r\n        <button \r\n          className={`nav-btn ${currentView === 'overview' ? 'active' : ''}`}\r\n          onClick={() => setCurrentView('overview')}\r\n        >\r\n          📊 Overview\r\n        </button>\r\n        <button \r\n          className={`nav-btn ${currentView === 'farmers' ? 'active' : ''}`}\r\n          onClick={() => setCurrentView('farmers')}\r\n        >\r\n          👨‍🌾 Farmers\r\n        </button>\r\n        <button \r\n          className={`nav-btn ${currentView === 'employees' ? 'active' : ''}`}\r\n          onClick={() => setCurrentView('employees')}\r\n        >\r\n          👥 Employees\r\n        </button>\r\n\r\n      </div>\r\n\r\n      <div className=\"dashboard-main\">\r\n        {currentView === 'overview' && renderOverview()}\r\n        {currentView === 'farmers' && renderFarmers()}\r\n        {currentView === 'employees' && renderEmployees()}\r\n\r\n      </div>\r\n\r\n      {showFarmerForm && (\r\n        <FarmerForm \r\n          onClose={() => setShowFarmerForm(false)}\r\n          onSubmit={(farmerData) => {\r\n            setFarmers(prev => [...prev, { ...farmerData, id: Date.now() }]);\r\n            setShowFarmerForm(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {showEmployeeForm && (\r\n        <EmployeeForm \r\n          onClose={() => setShowEmployeeForm(false)}\r\n          onSubmit={(employeeData) => {\r\n            setEmployees(prev => [...prev, { ...employeeData, id: Date.now() }]);\r\n            setShowEmployeeForm(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {showAssignmentModal && (\r\n        <AssignmentModal \r\n          farmers={farmers.filter(f => f.assignmentStatus === 'UNASSIGNED')}\r\n          employees={employees}\r\n          onClose={() => setShowAssignmentModal(false)}\r\n          onAssign={(assignments) => {\r\n            setFarmers(prev => prev.map(farmer => {\r\n              const assignment = assignments.find(a => a.farmerId === farmer.id);\r\n              if (assignment) {\r\n                return {\r\n                  ...farmer,\r\n                  assignmentStatus: 'ASSIGNED',\r\n                  assignedEmployee: assignment.employeeName,\r\n                  assignedDate: new Date().toISOString().split('T')[0]\r\n                };\r\n              }\r\n              return farmer;\r\n            }));\r\n            setShowAssignmentModal(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n                       {showFarmerDetails && (\r\n                   <ViewFarmerRegistrationDetails\r\n                     farmerData={selectedFarmerData}\r\n                     onClose={handleCloseFarmerDetails}\r\n                   />\r\n                 )}\r\n                 {showEmployeeDetails && (\r\n                   <ViewEditEmployeeDetails\r\n                     employeeData={selectedEmployeeData}\r\n                     onClose={handleCloseEmployeeDetails}\r\n                     onUpdate={handleUpdateEmployee}\r\n                   />\r\n                 )}\r\n\r\n\r\n                 {showKYCDocumentUpload && (\r\n                   <KYCDocumentUpload\r\n                     isOpen={showKYCDocumentUpload}\r\n                     onClose={handleCloseKYCDocumentUpload}\r\n                     farmer={selectedFarmerForKYC}\r\n                     onApprove={handleKYCApprove}\r\n                     onReject={handleKYCReject}\r\n                     onReferBack={handleKYCReferBack}\r\n                   />\r\n                 )}\r\n               </div>\r\n             );\r\n};\r\n\r\nexport default AdminDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}